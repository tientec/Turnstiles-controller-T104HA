
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\RTC.o:     file format elf32-littlearm
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\RTC.o

Disassembly of section .text.Set_Date:

00000000 <Set_Date>:
Set_Date():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:168
* Return         : None
*******************************************************************************/
void Set_Date ( _Date * Date_Ptr )
{

}
   0:	4770      	bx	lr
   2:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.Set_Time:

00000000 <Set_Time>:
Set_Time():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:180
* Return         : None
*******************************************************************************/
void Set_Time ( _Time * Time_Ptr )
{

}
   0:	4770      	bx	lr
   2:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.IsLeapYear:

00000000 <IsLeapYear>:
IsLeapYear():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:317
* Return         : 1: leap year
*                  0: not leap year
*******************************************************************************/
uint8_t IsLeapYear(uint16_t Year)
{
  if(Year % 4 != 0) return 0;
   0:	f010 0f03 	tst.w	r0, #3	; 0x3
   4:	d001      	beq.n	a <IsLeapYear+0xa>
   6:	2000      	movs	r0, #0
   8:	e013      	b.n	32 <IsLeapYear+0x32>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:318
  if(Year % 100 != 0) return 1;
   a:	2264      	movs	r2, #100
   c:	fbb0 f3f2 	udiv	r3, r0, r2
  10:	fb02 0313 	mls	r3, r2, r3, r0
  14:	b29b      	uxth	r3, r3
  16:	b10b      	cbz	r3, 1c <IsLeapYear+0x1c>
  18:	2001      	movs	r0, #1
  1a:	e00a      	b.n	32 <IsLeapYear+0x32>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:319
  return (uint8_t)(Year % 400 == 0);
  1c:	f44f 72c8 	mov.w	r2, #400	; 0x190
  20:	fbb0 f3f2 	udiv	r3, r0, r2
  24:	fb02 0313 	mls	r3, r2, r3, r0
  28:	b29b      	uxth	r3, r3
  2a:	f1d3 0001 	rsbs	r0, r3, #1	; 0x1
  2e:	bf38      	it	cc
  30:	2000      	movcc	r0, #0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:320
}
  32:	4770      	bx	lr
Disassembly of section .text.Update_Date:

00000000 <Update_Date>:
Update_Date():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:217
* Input          : Pointer to structure which keeps tha date values
* Output         : None
* Return         : none
*******************************************************************************/
void Update_Date ( _Date * Date_Ptr )
{
   0:	b510      	push	{r4, lr}
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:218
  Date_Ptr->Date_Vars.Day_Of_Week++;
   2:	7883      	ldrb	r3, [r0, #2]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:217
* Input          : Pointer to structure which keeps tha date values
* Output         : None
* Return         : none
*******************************************************************************/
void Update_Date ( _Date * Date_Ptr )
{
   4:	4604      	mov	r4, r0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:218
  Date_Ptr->Date_Vars.Day_Of_Week++;
   6:	3301      	adds	r3, #1
   8:	b2db      	uxtb	r3, r3
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:220

  if ( Date_Ptr->Date_Vars.Day_Of_Week > 6 )
   a:	2b06      	cmp	r3, #6
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:218
* Output         : None
* Return         : none
*******************************************************************************/
void Update_Date ( _Date * Date_Ptr )
{
  Date_Ptr->Date_Vars.Day_Of_Week++;
   c:	7083      	strb	r3, [r0, #2]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:220

  if ( Date_Ptr->Date_Vars.Day_Of_Week > 6 )
   e:	d901      	bls.n	14 <Update_Date+0x14>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:222
  {
    Date_Ptr->Date_Vars.Day_Of_Week = 0;
  10:	2300      	movs	r3, #0
  12:	7083      	strb	r3, [r0, #2]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:225
  }

  if(Date_Ptr->Date_Vars.Month == 1 || Date_Ptr->Date_Vars.Month == 3 || Date_Ptr->Date_Vars.Month == 5 || Date_Ptr->Date_Vars.Month == 7 ||
  14:	7923      	ldrb	r3, [r4, #4]
  16:	2b01      	cmp	r3, #1
  18:	d00b      	beq.n	32 <Update_Date+0x32>
  1a:	2b03      	cmp	r3, #3
  1c:	d009      	beq.n	32 <Update_Date+0x32>
  1e:	2b05      	cmp	r3, #5
  20:	d007      	beq.n	32 <Update_Date+0x32>
  22:	2b07      	cmp	r3, #7
  24:	d005      	beq.n	32 <Update_Date+0x32>
  26:	2b08      	cmp	r3, #8
  28:	d003      	beq.n	32 <Update_Date+0x32>
  2a:	2b0a      	cmp	r3, #10
  2c:	d001      	beq.n	32 <Update_Date+0x32>
  2e:	2b0c      	cmp	r3, #12
  30:	d10b      	bne.n	4a <Update_Date+0x4a>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:228
     Date_Ptr->Date_Vars.Month == 8 || Date_Ptr->Date_Vars.Month == 10 || Date_Ptr->Date_Vars.Month == 12)
  {
    if(Date_Ptr->Date_Vars.Day < 31)
  32:	78e2      	ldrb	r2, [r4, #3]
  34:	2a1e      	cmp	r2, #30
  36:	d913      	bls.n	60 <Update_Date+0x60>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:235
      Date_Ptr->Date_Vars.Day++;
    }
    /* Date structure member: date_s.day = 31 */
    else
    {
      if(Date_Ptr->Date_Vars.Month != 12)
  38:	2b0c      	cmp	r3, #12
  3a:	d113      	bne.n	64 <Update_Date+0x64>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:243
        Date_Ptr->Date_Vars.Day = 1;
      }
      /* Date structure member: date_s.day = 31 & date_s.month =12 */
      else
      {
        Date_Ptr->Date_Vars.Day = 1;
  3c:	2301      	movs	r3, #1
  3e:	70e3      	strb	r3, [r4, #3]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:244
        Date_Ptr->Date_Vars.Month = 1;
  40:	7123      	strb	r3, [r4, #4]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:245
        Date_Ptr->Date_Vars.Year++;
  42:	8823      	ldrh	r3, [r4, #0]
  44:	3301      	adds	r3, #1
  46:	8023      	strh	r3, [r4, #0]
  48:	e023      	b.n	92 <Update_Date+0x92>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:249
      }
    }
  }
  else if(Date_Ptr->Date_Vars.Month == 4 ||
  4a:	2b04      	cmp	r3, #4
  4c:	d005      	beq.n	5a <Update_Date+0x5a>
  4e:	2b06      	cmp	r3, #6
  50:	d003      	beq.n	5a <Update_Date+0x5a>
  52:	2b09      	cmp	r3, #9
  54:	d001      	beq.n	5a <Update_Date+0x5a>
  56:	2b0b      	cmp	r3, #11
  58:	d106      	bne.n	68 <Update_Date+0x68>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:254
          Date_Ptr->Date_Vars.Month == 6 ||
          Date_Ptr->Date_Vars.Month == 9 ||
          Date_Ptr->Date_Vars.Month == 11)
  {
    if(Date_Ptr->Date_Vars.Day < 30)
  5a:	78e2      	ldrb	r2, [r4, #3]
  5c:	2a1d      	cmp	r2, #29
  5e:	d801      	bhi.n	64 <Update_Date+0x64>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:256
    {
      Date_Ptr->Date_Vars.Day++;
  60:	1c53      	adds	r3, r2, #1
  62:	e015      	b.n	90 <Update_Date+0x90>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:261
    }
    /* Date structure member: date_s.day = 30 */
    else
    {
      Date_Ptr->Date_Vars.Month++;
  64:	3301      	adds	r3, #1
  66:	e011      	b.n	8c <Update_Date+0x8c>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:265
      Date_Ptr->Date_Vars.Day = 1;
    }
  }
  else if(Date_Ptr->Date_Vars.Month == 2)
  68:	2b02      	cmp	r3, #2
  6a:	d112      	bne.n	92 <Update_Date+0x92>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:267
  {
    if(Date_Ptr->Date_Vars.Day < 28)
  6c:	78e3      	ldrb	r3, [r4, #3]
  6e:	2b1b      	cmp	r3, #27
  70:	d801      	bhi.n	76 <Update_Date+0x76>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:269
    {
      Date_Ptr->Date_Vars.Day++;
  72:	3301      	adds	r3, #1
  74:	e00c      	b.n	90 <Update_Date+0x90>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:271
    }
    else if(Date_Ptr->Date_Vars.Day == 28)
  76:	2b1c      	cmp	r3, #28
  78:	d105      	bne.n	86 <Update_Date+0x86>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:274
    {
      /* Leap year */
      if(IsLeapYear(Date_Ptr->Date_Vars.Year))
  7a:	8820      	ldrh	r0, [r4, #0]
  7c:	f7ff fffe 	bl	0 <Update_Date>
  80:	b118      	cbz	r0, 8a <Update_Date+0x8a>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:276
      {
        Date_Ptr->Date_Vars.Day++;
  82:	231d      	movs	r3, #29
  84:	e004      	b.n	90 <Update_Date+0x90>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:284
      {
        Date_Ptr->Date_Vars.Month++;
        Date_Ptr->Date_Vars.Day = 1;
      }
    }
    else if(Date_Ptr->Date_Vars.Day == 29)
  86:	2b1d      	cmp	r3, #29
  88:	d103      	bne.n	92 <Update_Date+0x92>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:286
    {
      Date_Ptr->Date_Vars.Month++;
  8a:	2303      	movs	r3, #3
  8c:	7123      	strb	r3, [r4, #4]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:287
      Date_Ptr->Date_Vars.Day = 1;
  8e:	2301      	movs	r3, #1
  90:	70e3      	strb	r3, [r4, #3]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:290
    }
  }
}
  92:	bd10      	pop	{r4, pc}
Disassembly of section .text.Date_2_Days:

00000000 <Date_2_Days>:
Date_2_Days():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:362
* Output         : None
* Return         : 1: leap year
*                  0: not leap year
*******************************************************************************/
uint32_t Date_2_Days ( uint16_t Year, uint8_t Month, uint8_t Day )
{
   0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   4:	4606      	mov	r6, r0
   6:	460f      	mov	r7, r1
   8:	4690      	mov	r8, r2
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:365
    uint16_t i;
    uint32_t No_Of_Days;
    uint8_t Month_Tab[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31 ,30, 31 };
   a:	a801      	add	r0, sp, #4
   c:	220c      	movs	r2, #12
   e:	4919      	ldr	r1, [pc, #100]	(74 <Date_2_Days+0x74>)
  10:	f7ff fffe 	bl	0 <memcpy>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:369

    No_Of_Days = 0;

    if ( Year > START_YEAR )
  14:	f240 70df 	movw	r0, #2015	; 0x7df
  18:	4286      	cmp	r6, r0
  1a:	d801      	bhi.n	20 <Date_2_Days+0x20>
  1c:	2400      	movs	r4, #0
  1e:	e00f      	b.n	40 <Date_2_Days+0x40>
  20:	4605      	mov	r5, r0
  22:	2400      	movs	r4, #0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:373
    {
        for ( i = START_YEAR; i < Year; i++ )
        {
            if ( IsLeapYear(i) == 1 )
  24:	4628      	mov	r0, r5
  26:	f7ff fffe 	bl	0 <Date_2_Days>
  2a:	2801      	cmp	r0, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:375
            {
                No_Of_Days += 366;
  2c:	bf0e      	itee	eq
  2e:	f504 74b7 	addeq.w	r4, r4, #366	; 0x16e
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:379
            }
            else
            {
                No_Of_Days += 365;                        
  32:	f504 74b6 	addne.w	r4, r4, #364	; 0x16c
  36:	3401      	addne	r4, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:371

    No_Of_Days = 0;

    if ( Year > START_YEAR )
    {
        for ( i = START_YEAR; i < Year; i++ )
  38:	1c6b      	adds	r3, r5, #1
  3a:	b29d      	uxth	r5, r3
  3c:	42b5      	cmp	r5, r6
  3e:	d3f1      	bcc.n	24 <Date_2_Days+0x24>
  40:	2200      	movs	r2, #0
  42:	e006      	b.n	52 <Date_2_Days+0x52>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:386
        }  
    }

    for ( i = 0; i < (Month-1); i++ )
    {
        No_Of_Days += Month_Tab[i];
  44:	a904      	add	r1, sp, #16
  46:	188b      	adds	r3, r1, r2
  48:	f813 3c0c 	ldrb.w	r3, [r3, #-12]
  4c:	18e4      	adds	r4, r4, r3
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:384
                No_Of_Days += 365;                        
            }
        }  
    }

    for ( i = 0; i < (Month-1); i++ )
  4e:	1c53      	adds	r3, r2, #1
  50:	b29a      	uxth	r2, r3
  52:	1e7b      	subs	r3, r7, #1
  54:	429a      	cmp	r2, r3
  56:	dbf5      	blt.n	44 <Date_2_Days+0x44>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:389
    {
        No_Of_Days += Month_Tab[i];
    }
    
    if ( Month > 1 && IsLeapYear(Year) == 1 )
  58:	2f01      	cmp	r7, #1
  5a:	d905      	bls.n	68 <Date_2_Days+0x68>
  5c:	4630      	mov	r0, r6
  5e:	f7ff fffe 	bl	0 <Date_2_Days>
  62:	2801      	cmp	r0, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:391
    {
        No_Of_Days += 1;                     
  64:	bf08      	it	eq
  66:	3401      	addeq	r4, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:397
    } 
                
    No_Of_Days += Day;

    return No_Of_Days;
}
  68:	eb04 0008 	add.w	r0, r4, r8
  6c:	b004      	add	sp, #16
  6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  72:	46c0      	nop			(mov r8, r8)
  74:	00000000 	.word	0x00000000
Disassembly of section .text.RTC_WaitForLastTaskTimeout:

00000000 <RTC_WaitForLastTaskTimeout>:
RTC_WaitForLastTaskTimeout():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:409
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_WaitForLastTaskTimeout(void)
{
    while_timeout = 0;
   0:	4b0a      	ldr	r3, [pc, #40]	(2c <RTC_WaitForLastTaskTimeout+0x2c>)
   2:	2200      	movs	r2, #0
   4:	601a      	str	r2, [r3, #0]
   6:	e009      	b.n	1c <RTC_WaitForLastTaskTimeout+0x1c>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:415

    /* Loop until RTOFF flag is set */
    while ((RTC->CRL & RTC_FLAG_RTOFF) == (u16)RESET)
    {
        while_timeout++;
        if ( while_timeout >= 5000000)
   8:	4b09      	ldr	r3, [pc, #36]	(30 <RTC_WaitForLastTaskTimeout+0x30>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:412
void RTC_WaitForLastTaskTimeout(void)
{
    while_timeout = 0;

    /* Loop until RTOFF flag is set */
    while ((RTC->CRL & RTC_FLAG_RTOFF) == (u16)RESET)
   a:	3201      	adds	r2, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:415
    {
        while_timeout++;
        if ( while_timeout >= 5000000)
   c:	429a      	cmp	r2, r3
   e:	d905      	bls.n	1c <RTC_WaitForLastTaskTimeout+0x1c>
  10:	4b06      	ldr	r3, [pc, #24]	(2c <RTC_WaitForLastTaskTimeout+0x2c>)
  12:	601a      	str	r2, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:417
        {
          LSE_FAILED_FLAG = TRUE;
  14:	4b07      	ldr	r3, [pc, #28]	(34 <RTC_WaitForLastTaskTimeout+0x34>)
  16:	2201      	movs	r2, #1
  18:	701a      	strb	r2, [r3, #0]
  1a:	e006      	b.n	2a <RTC_WaitForLastTaskTimeout+0x2a>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:412
void RTC_WaitForLastTaskTimeout(void)
{
    while_timeout = 0;

    /* Loop until RTOFF flag is set */
    while ((RTC->CRL & RTC_FLAG_RTOFF) == (u16)RESET)
  1c:	4b06      	ldr	r3, [pc, #24]	(38 <RTC_WaitForLastTaskTimeout+0x38>)
  1e:	889b      	ldrh	r3, [r3, #4]
  20:	f013 0f20 	tst.w	r3, #32	; 0x20
  24:	d0f0      	beq.n	8 <RTC_WaitForLastTaskTimeout+0x8>
  26:	4b01      	ldr	r3, [pc, #4]	(2c <RTC_WaitForLastTaskTimeout+0x2c>)
  28:	601a      	str	r2, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:424
        if ( while_timeout >= 5000000)
        {
          break;
        }
    }
}
  2a:	4770      	bx	lr
  2c:	00000000 	.word	0x00000000
  30:	004c4b3f 	.word	0x004c4b3f
  34:	00000000 	.word	0x00000000
  38:	40002800 	.word	0x40002800
Disassembly of section .text.RTC_WaitForSynchroTimeout:

00000000 <RTC_WaitForSynchroTimeout>:
RTC_WaitForSynchroTimeout():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:438
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_WaitForSynchroTimeout(void)
{
    while_timeout = 0;
   0:	4b0e      	ldr	r3, [pc, #56]	(3c <RTC_WaitForSynchroTimeout+0x3c>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:441

    /* Clear RSF flag */
    RTC->CRL &= (u16)~RTC_FLAG_RSF;
   2:	4a0f      	ldr	r2, [pc, #60]	(40 <RTC_WaitForSynchroTimeout+0x40>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:438
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_WaitForSynchroTimeout(void)
{
    while_timeout = 0;
   4:	2100      	movs	r1, #0
   6:	6019      	str	r1, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:441

    /* Clear RSF flag */
    RTC->CRL &= (u16)~RTC_FLAG_RSF;
   8:	8893      	ldrh	r3, [r2, #4]
   a:	f023 0308 	bic.w	r3, r3, #8	; 0x8
   e:	041b      	lsls	r3, r3, #16
  10:	0c1b      	lsrs	r3, r3, #16
  12:	8093      	strh	r3, [r2, #4]
  14:	e009      	b.n	2a <RTC_WaitForSynchroTimeout+0x2a>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:448
    /* Loop until RSF flag is set */
    while ((RTC->CRL & RTC_FLAG_RSF) == (u16)RESET)
    {
    
        while_timeout++;
        if ( while_timeout >= 5000000)
  16:	4b0b      	ldr	r3, [pc, #44]	(44 <RTC_WaitForSynchroTimeout+0x44>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:444

    /* Clear RSF flag */
    RTC->CRL &= (u16)~RTC_FLAG_RSF;

    /* Loop until RSF flag is set */
    while ((RTC->CRL & RTC_FLAG_RSF) == (u16)RESET)
  18:	3101      	adds	r1, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:448
    {
    
        while_timeout++;
        if ( while_timeout >= 5000000)
  1a:	4299      	cmp	r1, r3
  1c:	d905      	bls.n	2a <RTC_WaitForSynchroTimeout+0x2a>
  1e:	4b07      	ldr	r3, [pc, #28]	(3c <RTC_WaitForSynchroTimeout+0x3c>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:450
        {
          LSE_FAILED_FLAG = TRUE;
  20:	2201      	movs	r2, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:448
    /* Loop until RSF flag is set */
    while ((RTC->CRL & RTC_FLAG_RSF) == (u16)RESET)
    {
    
        while_timeout++;
        if ( while_timeout >= 5000000)
  22:	6019      	str	r1, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:450
        {
          LSE_FAILED_FLAG = TRUE;
  24:	4b08      	ldr	r3, [pc, #32]	(48 <RTC_WaitForSynchroTimeout+0x48>)
  26:	701a      	strb	r2, [r3, #0]
  28:	e006      	b.n	38 <RTC_WaitForSynchroTimeout+0x38>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:444

    /* Clear RSF flag */
    RTC->CRL &= (u16)~RTC_FLAG_RSF;

    /* Loop until RSF flag is set */
    while ((RTC->CRL & RTC_FLAG_RSF) == (u16)RESET)
  2a:	4b05      	ldr	r3, [pc, #20]	(40 <RTC_WaitForSynchroTimeout+0x40>)
  2c:	889b      	ldrh	r3, [r3, #4]
  2e:	f013 0f08 	tst.w	r3, #8	; 0x8
  32:	d0f0      	beq.n	16 <RTC_WaitForSynchroTimeout+0x16>
  34:	4b01      	ldr	r3, [pc, #4]	(3c <RTC_WaitForSynchroTimeout+0x3c>)
  36:	6019      	str	r1, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:457
        if ( while_timeout >= 5000000)
        {
          break;
        }
    }
}
  38:	4770      	bx	lr
  3a:	46c0      	nop			(mov r8, r8)
  3c:	00000000 	.word	0x00000000
  40:	40002800 	.word	0x40002800
  44:	004c4b3f 	.word	0x004c4b3f
  48:	00000000 	.word	0x00000000
Disassembly of section .text.Write_Date:

00000000 <Write_Date>:
Write_Date():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:341
        Write_Date ( &Date ); 
    }
}

void Write_Date ( _Date * Date_Ptr )
{
   0:	b510      	push	{r4, lr}
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:344
    uint16_t Bkp_Tmp;

    Bkp_Tmp = Date_Ptr->Date_Vars.Day << 8;
   2:	78c3      	ldrb	r3, [r0, #3]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:346
    Bkp_Tmp |= Date_Ptr->Date_Vars.Month; 
    BKP_WriteBackupRegister(BKP_DR2, Bkp_Tmp);
   4:	7901      	ldrb	r1, [r0, #4]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:341
        Write_Date ( &Date ); 
    }
}

void Write_Date ( _Date * Date_Ptr )
{
   6:	4604      	mov	r4, r0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:346
    uint16_t Bkp_Tmp;

    Bkp_Tmp = Date_Ptr->Date_Vars.Day << 8;
    Bkp_Tmp |= Date_Ptr->Date_Vars.Month; 
    BKP_WriteBackupRegister(BKP_DR2, Bkp_Tmp);
   8:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
   c:	2008      	movs	r0, #8
   e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:347
    BKP_WriteBackupRegister(BKP_DR3, Date_Ptr->Date_Vars.Year);
  12:	200c      	movs	r0, #12
  14:	8821      	ldrh	r1, [r4, #0]
  16:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:349
    Bkp_Tmp = Date_Ptr->Date_Vars.Day_Of_Week << 8;
    BKP_WriteBackupRegister(BKP_DR4, Bkp_Tmp);
  1a:	78a1      	ldrb	r1, [r4, #2]
  1c:	2010      	movs	r0, #16
  1e:	0209      	lsls	r1, r1, #8
  20:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:351

}
  24:	bd10      	pop	{r4, pc}
  26:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.Update_Time:

00000000 <Update_Time>:
Update_Time():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:299
* Input          : Pointer to structure which keeps tha time values
* Output         : None
* Return         : None
*******************************************************************************/
void Update_Time ( _Time * Time_Ptr )
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:302
    uint32_t Time_Temp;

    RTC_WaitForLastTask();  
   4:	f7ff fffe 	bl	0 <RTC_WaitForLastTask>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:304
    Time_Temp = Time_Ptr->Time_Vars.Hour*3600 + Time_Ptr->Time_Vars.Minute*60 + Time_Ptr->Time_Vars.Second;
    RTC_SetCounter ( Time_Temp );
   8:	7862      	ldrb	r2, [r4, #1]
   a:	233c      	movs	r3, #60
   c:	4353      	muls	r3, r2
   e:	78a1      	ldrb	r1, [r4, #2]
  10:	f44f 6261 	mov.w	r2, #3600	; 0xe10
  14:	fb02 3101 	mla	r1, r2, r1, r3
  18:	7820      	ldrb	r0, [r4, #0]
  1a:	1808      	adds	r0, r1, r0
  1c:	f7ff fffe 	bl	0 <RTC_SetCounter>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:305
}
  20:	bd10      	pop	{r4, pc}
  22:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.Read_Time:

00000000 <Read_Time>:
Read_Time():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:204
* Input          : Pointer to structure which keeps tha time values
* Output         : None
* Return         : None
*******************************************************************************/
void Read_Time ( _Time * Time_Ptr )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4606      	mov	r6, r0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:205
    Time_Ptr->Time_Vars.Hour = (RTC_GetCounter()/3600);
   4:	f7ff fffe 	bl	0 <RTC_GetCounter>
   8:	f44f 6461 	mov.w	r4, #3600	; 0xe10
   c:	fbb0 f0f4 	udiv	r0, r0, r4
  10:	70b0      	strb	r0, [r6, #2]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:206
    Time_Ptr->Time_Vars.Minute = (RTC_GetCounter()%3600)/60;
  12:	f7ff fffe 	bl	0 <RTC_GetCounter>
  16:	fbb0 f3f4 	udiv	r3, r0, r4
  1a:	fb03 0314 	mls	r3, r3, r4, r0
  1e:	253c      	movs	r5, #60
  20:	fbb3 f3f5 	udiv	r3, r3, r5
  24:	7073      	strb	r3, [r6, #1]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:207
    Time_Ptr->Time_Vars.Second = (RTC_GetCounter()%3600)%60;
  26:	f7ff fffe 	bl	0 <RTC_GetCounter>
  2a:	fbb0 f3f4 	udiv	r3, r0, r4
  2e:	fb03 0414 	mls	r4, r3, r4, r0
  32:	fbb4 f3f5 	udiv	r3, r4, r5
  36:	fb05 4313 	mls	r3, r5, r3, r4
  3a:	7033      	strb	r3, [r6, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:208
}
  3c:	bd70      	pop	{r4, r5, r6, pc}
  3e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.Read_Date:

00000000 <Read_Date>:
Read_Date():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:190
* Input          : Pointer to structure which keeps tha date values
* Output         : None
* Return         : None
*******************************************************************************/
void Read_Date ( _Date * Date_Ptr )
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:191
    Date_Ptr->Date_Vars.Day = (BKP_ReadBackupRegister(BKP_DR2) & 0xFF00) >> 8;
   4:	2008      	movs	r0, #8
   6:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   a:	0a00      	lsrs	r0, r0, #8
   c:	70e0      	strb	r0, [r4, #3]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:192
    Date_Ptr->Date_Vars.Month = (BKP_ReadBackupRegister(BKP_DR2) & 0x00FF);
   e:	2008      	movs	r0, #8
  10:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  14:	7120      	strb	r0, [r4, #4]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:193
    Date_Ptr->Date_Vars.Year = BKP_ReadBackupRegister(BKP_DR3);
  16:	200c      	movs	r0, #12
  18:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  1c:	8020      	strh	r0, [r4, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:194
    Date_Ptr->Date_Vars.Day_Of_Week = (BKP_ReadBackupRegister(BKP_DR4) & 0xFF00) >> 8;
  1e:	2010      	movs	r0, #16
  20:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  24:	0a00      	lsrs	r0, r0, #8
  26:	70a0      	strb	r0, [r4, #2]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:195
}
  28:	bd10      	pop	{r4, pc}
  2a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.RTC_Handler:

00000000 <RTC_Handler>:
RTC_Handler():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:128
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_Handler ( void )
{
   0:	b513      	push	{r0, r1, r4, lr}
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:133
    uint16_t Counter_Tmp = 0;

    _Time Time_Temp;

    Time_Temp = Time;
   2:	2203      	movs	r2, #3
   4:	4914      	ldr	r1, [pc, #80]	(58 <RTC_Handler+0x58>)
   6:	f10d 0005 	add.w	r0, sp, #5	; 0x5
   a:	f7ff fffe 	bl	0 <memcpy>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:135

    if ( RTC_GetCounter() >= 86399 )
   e:	f7ff fffe 	bl	0 <RTC_GetCounter>
  12:	4b12      	ldr	r3, [pc, #72]	(5c <RTC_Handler+0x5c>)
  14:	4298      	cmp	r0, r3
  16:	d90f      	bls.n	38 <RTC_Handler+0x38>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:137
    {
        RTC_WaitForLastTask();
  18:	f7ff fffe 	bl	0 <RTC_WaitForLastTask>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:138
        RTC_SetCounter(0x00000000);
  1c:	2000      	movs	r0, #0
  1e:	f7ff fffe 	bl	0 <RTC_SetCounter>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:139
        RTC_WaitForLastTask();
  22:	f7ff fffe 	bl	0 <RTC_WaitForLastTask>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:141
 
        Update_Date ( &Date );
  26:	480e      	ldr	r0, [pc, #56]	(3c <RTC_Handler+0x3c>)
  28:	f7ff fffe 	bl	0 <RTC_Handler>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:142
        Write_Date ( &Date );
  2c:	480c      	ldr	r0, [pc, #48]	(34 <RTC_Handler+0x34>)
  2e:	f7ff fffe 	bl	0 <RTC_Handler>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:145

        Counter_Tmp = 1;
        Update_Lock_Counter(Counter_Tmp);
  32:	2001      	movs	r0, #1
  34:	f7ff fffe 	bl	0 <Update_Lock_Counter>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:150
    }

 
    Read_Date ( &Date );
    Read_Time ( &Time );
  38:	4c07      	ldr	r4, [pc, #28]	(58 <RTC_Handler+0x58>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:149
        Counter_Tmp = 1;
        Update_Lock_Counter(Counter_Tmp);
    }

 
    Read_Date ( &Date );
  3a:	4809      	ldr	r0, [pc, #36]	(60 <RTC_Handler+0x60>)
  3c:	f7ff fffe 	bl	0 <RTC_Handler>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:150
    Read_Time ( &Time );
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <RTC_Handler>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:152

    if ( Time_Temp.Time_Vars.Minute != Time.Time_Vars.Minute )
  46:	f89d 2006 	ldrb.w	r2, [sp, #6]
  4a:	7863      	ldrb	r3, [r4, #1]
  4c:	429a      	cmp	r2, r3
  4e:	d002      	beq.n	56 <RTC_Handler+0x56>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:154
    {
        Reload_Screen = TRUE;
  50:	4b04      	ldr	r3, [pc, #16]	(64 <RTC_Handler+0x64>)
  52:	2201      	movs	r2, #1
  54:	701a      	strb	r2, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:156
    }
}
  56:	bd1c      	pop	{r2, r3, r4, pc}
  58:	00000000 	.word	0x00000000
  5c:	0001517e 	.word	0x0001517e
	...
Disassembly of section .text.RTC_Init:

00000000 <RTC_Init>:
RTC_Init():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:47
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_Init(void)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:49
    /* Enable the LSE OSC */
    RCC_LSEConfig(RCC_LSE_ON);
   2:	2001      	movs	r0, #1
   4:	f7ff fffe 	bl	0 <RCC_LSEConfig>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:51
    
    LSE_FAILED_FLAG = FALSE;
   8:	4a33      	ldr	r2, [pc, #204]	(d8 <RTC_Init+0xd8>)
   a:	2300      	movs	r3, #0
   c:	7013      	strb	r3, [r2, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:52
    LSE_Timeout = 0;
   e:	6053      	str	r3, [r2, #4]
  10:	e00e      	b.n	30 <RTC_Init+0x30>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:56

    while(RCC_GetFlagStatus(RCC_FLAG_LSERDY) == RESET)
    {
        LSE_Timeout++;
  12:	4931      	ldr	r1, [pc, #196]	(d8 <RTC_Init+0xd8>)
  14:	684b      	ldr	r3, [r1, #4]
  16:	3301      	adds	r3, #1
  18:	604b      	str	r3, [r1, #4]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:58
    
        if ( LSE_Timeout >= 5000000 )
  1a:	684a      	ldr	r2, [r1, #4]
  1c:	4b2f      	ldr	r3, [pc, #188]	(dc <RTC_Init+0xdc>)
  1e:	429a      	cmp	r2, r3
  20:	d901      	bls.n	26 <RTC_Init+0x26>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:60
        {           
            LSE_FAILED_FLAG = TRUE;
  22:	2301      	movs	r3, #1
  24:	700b      	strb	r3, [r1, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:63
        }
    
        if ( LSE_Timeout >= 5000000 )
  26:	4b2c      	ldr	r3, [pc, #176]	(d8 <RTC_Init+0xd8>)
  28:	685a      	ldr	r2, [r3, #4]
  2a:	4b2c      	ldr	r3, [pc, #176]	(dc <RTC_Init+0xdc>)
  2c:	429a      	cmp	r2, r3
  2e:	d804      	bhi.n	3a <RTC_Init+0x3a>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:54
    RCC_LSEConfig(RCC_LSE_ON);
    
    LSE_FAILED_FLAG = FALSE;
    LSE_Timeout = 0;

    while(RCC_GetFlagStatus(RCC_FLAG_LSERDY) == RESET)
  30:	2041      	movs	r0, #65
  32:	f7ff fffe 	bl	0 <RCC_GetFlagStatus>
  36:	2800      	cmp	r0, #0
  38:	d0eb      	beq.n	12 <RTC_Init+0x12>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:69
        {
            break;
        }
    }
  
    if ( LSE_FAILED_FLAG == FALSE )
  3a:	4b27      	ldr	r3, [pc, #156]	(d8 <RTC_Init+0xd8>)
  3c:	781b      	ldrb	r3, [r3, #0]
  3e:	b983      	cbnz	r3, 62 <RTC_Init+0x62>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:72
    { 
        /* Select the RTC Clock Source */
        RCC_RTCCLKConfig(RCC_RTCCLKSource_LSE);
  40:	f44f 7080 	mov.w	r0, #256	; 0x100
  44:	f7ff fffe 	bl	0 <RCC_RTCCLKConfig>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:75

        /* Enable the RTC Clock */
        RCC_RTCCLKCmd(ENABLE);
  48:	2001      	movs	r0, #1
  4a:	f7ff fffe 	bl	0 <RCC_RTCCLKCmd>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:78

        /* Wait for RTC registers synchronization */
        RTC_WaitForSynchroTimeout();
  4e:	f7ff fffe 	bl	0 <RTC_Init>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:81

        /* Wait until last write operation on RTC registers has finished */
        RTC_WaitForLastTaskTimeout();
  52:	f7ff fffe 	bl	0 <RTC_Init>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:90

        /* Wait until last write operation on RTC registers has finished */
        //RTC_WaitForLastTaskTimeout();
   
        /* Set RTC prescaler: set RTC period to 1sec */
        RTC_SetPrescaler(32767); /* RTC period = RTCCLK/RTC_PR = (32.768 KHz)/(32767+1) */
  56:	f647 70ff 	movw	r0, #32767	; 0x7fff
  5a:	f7ff fffe 	bl	0 <RTC_SetPrescaler>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:93

        /* Wait until last write operation on RTC registers has finished */
        RTC_WaitForLastTaskTimeout();  
  5e:	f7ff fffe 	bl	0 <RTC_Init>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:96
    }
        
    if ( LSE_FAILED_FLAG == TRUE )
  62:	4b1d      	ldr	r3, [pc, #116]	(d8 <RTC_Init+0xd8>)
  64:	4c1e      	ldr	r4, [pc, #120]	(e0 <RTC_Init+0xe0>)
  66:	781b      	ldrb	r3, [r3, #0]
  68:	2b01      	cmp	r3, #1
  6a:	d104      	bne.n	76 <RTC_Init+0x76>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:98
    {
        RTC_SetCounter(0x00000000);
  6c:	2000      	movs	r0, #0
  6e:	f7ff fffe 	bl	0 <RTC_SetCounter>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:99
        Lcd_Write_Text(RTC_Text1);
  72:	6820      	ldr	r0, [r4, #0]
  74:	e000      	b.n	78 <RTC_Init+0x78>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:103
    }
    else
    {
        Lcd_Write_Text ( RTC1 );           
  76:	6860      	ldr	r0, [r4, #4]
  78:	f7ff fffe 	bl	0 <Lcd_Write_Text>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:106
    }

    if ( LSE_FAILED_FLAG == FALSE )
  7c:	4b16      	ldr	r3, [pc, #88]	(d8 <RTC_Init+0xd8>)
  7e:	781c      	ldrb	r4, [r3, #0]
  80:	bb44      	cbnz	r4, d4 <RTC_Init+0xd4>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:109
    {     
        /* Read data from backup registers to clock structure */
        Read_Date ( &Date );
  82:	4818      	ldr	r0, [pc, #96]	(e4 <RTC_Init+0xe4>)
  84:	f7ff fffe 	bl	0 <RTC_Init>
Set_Start_Date():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:326

static void Set_Start_Date ( _Date * Date_Ptr )
{
    uint32_t i = 0;

    Lock_Counter = 0;
  88:	4b17      	ldr	r3, [pc, #92]	(e8 <RTC_Init+0xe8>)
  8a:	801c      	strh	r4, [r3, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:328

    if(RTC_GetCounter() / 86399 != 0)
  8c:	f7ff fffe 	bl	0 <RTC_GetCounter>
  90:	4b16      	ldr	r3, [pc, #88]	(ec <RTC_Init+0xec>)
  92:	4298      	cmp	r0, r3
  94:	d91b      	bls.n	ce <RTC_Init+0xce>
  96:	4625      	mov	r5, r4
  98:	e007      	b.n	aa <RTC_Init+0xaa>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:332
    {
        for(i = 0; i < (RTC_GetCounter() / 86399); i++)
        {
          Update_Date( &Date );
  9a:	4812      	ldr	r0, [pc, #72]	(e4 <RTC_Init+0xe4>)
  9c:	f7ff fffe 	bl	0 <RTC_Init>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:333
          Lock_Counter++;
  a0:	4a11      	ldr	r2, [pc, #68]	(e8 <RTC_Init+0xe8>)
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:330

    Lock_Counter = 0;

    if(RTC_GetCounter() / 86399 != 0)
    {
        for(i = 0; i < (RTC_GetCounter() / 86399); i++)
  a2:	3501      	adds	r5, #1
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:333
        {
          Update_Date( &Date );
          Lock_Counter++;
  a4:	8813      	ldrh	r3, [r2, #0]
  a6:	3301      	adds	r3, #1
  a8:	8013      	strh	r3, [r2, #0]
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:330

    Lock_Counter = 0;

    if(RTC_GetCounter() / 86399 != 0)
    {
        for(i = 0; i < (RTC_GetCounter() / 86399); i++)
  aa:	f7ff fffe 	bl	0 <RTC_GetCounter>
  ae:	4c10      	ldr	r4, [pc, #64]	(f0 <RTC_Init+0xf0>)
  b0:	fbb0 f0f4 	udiv	r0, r0, r4
  b4:	4285      	cmp	r5, r0
  b6:	d3f0      	bcc.n	9a <RTC_Init+0x9a>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:335
        {
          Update_Date( &Date );
          Lock_Counter++;
        }
        RTC_SetCounter(RTC_GetCounter() % 86399);
  b8:	f7ff fffe 	bl	0 <RTC_GetCounter>
  bc:	fbb0 f3f4 	udiv	r3, r0, r4
  c0:	fb03 0014 	mls	r0, r3, r4, r0
  c4:	f7ff fffe 	bl	0 <RTC_SetCounter>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:336
        Write_Date ( &Date ); 
  c8:	4806      	ldr	r0, [pc, #24]	(1c <RTC_Init+0x1c>)
  ca:	f7ff fffe 	bl	0 <RTC_Init>
RTC_Init():
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:115

        /* update date time if RTC counter is above */
        Set_Start_Date ( &Date );

        /* read time from counter */
        Read_Time ( &Time );
  ce:	4809      	ldr	r0, [pc, #36]	(28 <RTC_Init+0x28>)
  d0:	f7ff fffe 	bl	0 <RTC_Init>
C:\tien\PROJEKTY\procesory\STM\T104_V100a_GASTOP\sources/RTC.c:117
    }
}
  d4:	bd70      	pop	{r4, r5, r6, pc}
  d6:	46c0      	nop			(mov r8, r8)
  d8:	00000000 	.word	0x00000000
  dc:	004c4b3f 	.word	0x004c4b3f
	...
  ec:	0001517e 	.word	0x0001517e
  f0:	0001517f 	.word	0x0001517f
  f4:	00000000 	.word	0x00000000
